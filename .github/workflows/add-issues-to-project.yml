# GitHub action that automatically adds newly filed issues to the Lit project.
#
# Based on the example at
# https://docs.github.com/en/issues/trying-out-the-new-projects-experience/automating-projects#example-workflow-authenticating-with-a-personal-access-token
on:
  issues:
    types: [opened]
jobs:
  add-issue-to-project:
    # Don't run on forks. Issues on forks aren't relevant, and secrets aren't
    # available anyway.
    if: github.repository == 'webcomponents/webcomponents.org'

    runs-on: ubuntu-latest
    steps:
      # Finds the global entity ID for the project and adds it to an environment variable
      # for the next step to consume.
      - name: Get project ID
        env:
          GITHUB_TOKEN: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}
          ORGANIZATION: lit
          PROJECT_NUMBER: 4
        run: |
          gh api graphql -f query='
            query($organization: String!, $project_number: Int!) {
              organization(login: $organization){
                projectV2(number: $project_number) {
                  id
                }
              }
            }' -f organization=$ORGANIZATION -F project_number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV

      - name: Add issue to project
        env:
          GITHUB_TOKEN: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}
          # Note: issue.url is the REST API url, but we want issue.html_url
          # which is the regular public URL.
          ISSUE_URL: ${{ github.event.issue.html_url }}
        # The addProjectV2ItemById API refuses to add an issue to a project
        # unless the issue is in the same org as the project -- even though it's
        # possible to do so through the UI. However, it turns out if you set the
        # URL as the title using the addProjectV2DraftIssue API, that does the
        # right thing!
        run: |
          gh api graphql -f query='
            mutation($project_id:ID!, $issue_url:String!) {
              addProjectV2DraftIssue(input: {projectId: $project_id, title: $issue_url}) {
                projectItem {
                  databaseId
                }
              }
            }' -f project_id=$PROJECT_ID -f issue_url=$ISSUE_URL
